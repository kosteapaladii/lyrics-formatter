src/
  styles/
    components/
      Editor.module.css
      ExtraSection.module.css
      LyricsSection.module.css
      EditorToolbar.module.css
      SidePanel.module.css
    shared/
      buttons.module.css
      layout.module.css
```

Let's create these files:

### /d:/lyrics-formatter/lyrics-formatter/src/styles/components/Editor.module.css

```css
.container {
  min-height: 100vh;
  background-color: white;
  padding: 0.5rem 1rem 1.5rem;
}

.inner {
  max-width: 64rem;
  margin: 0 auto;
  background-color: white;
  border-radius: 0.75rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  padding: 1rem 2rem;
}

.titleBar {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 1.5rem;
}

.titleInput {
  flex: 1;
  min-width: 0;
  font-size: 2rem;
  border-bottom-width: 1px;
  padding: 0.5rem;
  color: #ef4444;
}

.titleInput[readonly] {
  border-color: transparent;
}

.editButton {
  padding: 0.5rem;
  border-radius: 0.5rem;
  transition: background-color 0.2s;
}

.editButton.active {
  background-color: #22c55e;
}

.editButton.inactive {
  background-color: #3b82f6;
}
```

### /d:/lyrics-formatter/lyrics-formatter/src/styles/components/ExtraSection.module.css

```css
// filepath: /d:/lyrics-formatter/lyrics-formatter/src/styles/components/ExtraSection.module.css
.container {
  width: 100%;
  border-radius: 0.5rem;
  border-width: 1px;
}

.editable {
  composes: container;
  border-color: rgb(209 213 219);
}

.readonly {
  composes: container;
  border-color: transparent;
  background-color: rgb(249 250 251);
}

.input {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid rgb(209 213 219);
  border-radius: 0.375rem;
}

.textarea {
  composes: input;
  font-family: monospace;
  font-size: 0.875rem;
  min-height: 6rem;
}

.select {
  composes: input;
}

.linkContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
```

### /d:/lyrics-formatter/lyrics-formatter/src/styles/shared/buttons.module.css

```css
// filepath: /d:/lyrics-formatter/lyrics-formatter/src/styles/shared/buttons.module.css
.button {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  transition: all 0.2s;
}

.primary {
  composes: button;
  background-color: #1b1b1b;
  color: white;
}

.primary:hover {
  background-color: #2b2b2b;
}

.secondary {
  composes: button;
  background-color: #8b5cf6;
  color: white;
}

.secondary:hover {
  background-color: #7c3aed;
}

.danger {
  composes: button;
  background-color: #ef4444;
  color: white;
}

.danger:hover {
  background-color: #dc2626;
}
```

Now, update the components to use these CSS modules:

### /d:/lyrics-formatter/lyrics-formatter/src/components/editor/ExtraSection.jsx

```jsx
// filepath: /d:/lyrics-formatter/lyrics-formatter/src/components/editor/ExtraSection.jsx
import React, { useState, useEffect } from 'react';
import { MUSICAL_KEYS } from '../../utils/constants';
import styles from '../../styles/components/ExtraSection.module.css';

const ExtraSection = ({ section, index, isEditMode, onUpdate }) => {
  // ...existing state and effects...

  return (
    <div className={isEditMode ? styles.editable : styles.readonly}>
      {renderContent()}
    </div>
  );
};

export default ExtraSection;
```

Follow this pattern for other components. This organizes the styles into reusable modules and makes the code more maintainable. Would you like me to continue with the other components?
